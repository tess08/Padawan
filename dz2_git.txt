Как отправить ДЗ на проверку.
 
1. Создайте текстовый файл как в первом ДЗ по Terminal.
 
2. Сценарий перенесите в этот файл.
 
3. На против каждого действия - напишите команду в GitBash


Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.

 

	4. Создать файл “new.json”
 
	touch new.json

	5. Добавить файл под гит.
 	
	git add new.json

	6. Закоммитить файл.
 
	git commit -m "add new.json"

	7. Отправить файл на внешний GitHub репозиторий.
 
	git push

	8. Создать файлы new2.json, new2.xml, new2.txt
 
	touch new2.{json,xml,txt}

	9. Добавить файлы под гит.
 
	git add . 

	10. Закоммитить файлы.
 
	git commit -am "add new2.xml new2.txt"

	11. Отправить файлы на внешний GitHub репозиторий.
 
	git push

	12. Отредактировать содержание файла “new2.txt” написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата).

	vim 2.txt 

	13. Отредактировать содержание файла “new2.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON. 
	vim new2.json
 

	14. Добавить и закоммитить “new2.txt” одной строчкой.
	git add new2.txt & git commit -m "add new2.txt" 

 
	15. Добавить и закоммитить “new2.json” одной строчкой.
	
git add new2.txt & git commit -m "add new2.json"

	2й вариант - пп.14-15 вместе: git commit -am "modified new2.json, new2.txt" 

	16. Отправить изменения на внешний репозиторий.

	git push 

	17. Отредактировать содержание файла “new2.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
 
	vim new2.xml

	18. Добавить и закоммитить “new2.xml” одной строчкой. 

	git commit -am "modified new2.xml"
 
	19. Отправить изменения на внешний репозиторий.
 
	git push

	20. Отправить предыдущее домашнее задание по GitBush Terminal на внешний репозиторий.

	mv ./dz_1/ ./homework-git/
	cd homework-git/
	git add dz_1
	git commit -m "add dz_1"
	git push 

	21. В веб интерфейсе GitHub создать файл new3.txt.
 
	"create new file"

	22. Отредактировать в веб интерфейсе содержание файла “new3.txt” - написать информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить).

	добавлен текст 

	23. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 
	"commit new file"

	24. Синхронизировать внешний и локальный репозитории (слить изменения с внешнего репозитория)
	git pull
 
 
	25. Отредактировать в веб интерфейсе содержание файла “new2.json” - добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить). Всё в формате JSON.

	"edit this file"
	добавить текст в формате json
	
	26. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

	"commit changes" 
 
	27. Синхронизировать внешний и локальный репозитории 

	git pull 

	28. Отредактировать в веб интерфейсе содержание файла “new2.xml” - добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить). Всё в формате XML.
 
	"edit this file"

	29. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

	"commit changes" 
	
	30. Синхронизировать внешний и локальный репозитории 

Данные для заполнения и редактирования файлов можете использовать любые, не обязательно свои.
	
	git pull